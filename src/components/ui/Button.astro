---
import Typography from "@/components/ui/Typography.astro";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"div">{
  variant?: "transparent" | "solid";
}

const { class: className, variant = "solid", ...others } = Astro.props;
let buttonBackground =
  variant === "solid" ? "rgb(var(--color-default-foreground))" : "transparent";
let buttonTypography =
  variant === "solid"
    ? "rgb(var(--color-default-background))"
    : "rgb(var(--color-default-foreground))";
let hoverBackground =
  variant === "solid"
    ? "rgb(var(--color-default-foreground) / 80%)"
    : "rgb(var(--color-default-foreground) / 20%)";
let activeBackground =
  variant === "solid"
    ? "rgb(var(--color-default-foreground) / 60%)"
    : "rgb(var(--color-default-foreground) / 40%)";
---

<div class:list={[className, "button-base"]} {...others}>
  <Typography as="span" variant="button">
    <slot />
  </Typography>
</div>

<style
  define:vars={{
    "button-color-background": buttonBackground,
    "button-color-typography": buttonTypography,
    "button-color-hover": hoverBackground,
    "button-color-active": activeBackground,
  }}
>
  .button-base {
    user-select: none;
    cursor: pointer;

    background: var(--button-color-background);
    color: var(--button-color-typography);
    padding: calc(var(--spacing-paragraph) / 2) var(--spacing-paragraph);
    transition: background var(--transition-short);

    &:hover {
      background: var(--button-color-hover);
    }
    &:active {
      background: var(--button-color-active);
    }
  }
</style>
